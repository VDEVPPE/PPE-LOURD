/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javafxapplication1;

import com.itextpdf.text.*;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.pdf.codec.PngImage;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
/*
 Voir https://developers.itextpdf.com/examples/itext-action-second-edition/chapter-1#83-helloworldnarrow.java
*/


import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;


/**
 *
 * @author vincentf
 */
public class EnvoiPdf extends javax.swing.JFrame {
    PersistanceSQL      connexion = new PersistanceSQL();
    Client              client    = new Client();
    Materiel            materiel  = null;
    ContratMaintenance  contrat     = null;
    
    ArrayList <Materiel>          recupMat    = null;
    List <Client>                 infCli      = null;
    ArrayList<ContratMaintenance> lesContrat  = new ArrayList();
    
    GregorianCalendar   today       = new GregorianCalendar();
    SimpleDateFormat    dateFormat  = new SimpleDateFormat("yyyy-MM-dd");
    public EnvoiPdf() {
        
        initComponents();
        //Initialisation de l'affichage
        this.setTitle("Accueil");
        this.setSize(400, 200);
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        valider = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        idClient = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        valider.setText("Valider");
        valider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validerActionPerformed(evt);
            }
        });

        jLabel1.setText("Identifiant client :");

        idClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idClientActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(109, 109, 109)
                        .addComponent(idClient, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(valider)))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(idClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(valider)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void idClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idClientActionPerformed
        
    }//GEN-LAST:event_idClientActionPerformed
public void contratPerim() throws SQLException{
    System.out.println("********************************");
    
    connexion.ouvrirConnexion();
    ResultSet result = connexion.select("SELECT * FROM contrat WHERE "/*(SELECT ID_client FROM contrat WHERE Date_renouvel_contrat = '" + today + "')*/+" ID_client = " + idClient.getText());
    //connexion.ouvrirConnexion();
    while (result.next()){
        System.out.println("KiKou");
        int    idContrat    = result.getInt("ID_contrat");
        Date debutContrat   = result.getDate("Date_debut_contrat");
        Date renouvContrat  = result.getDate("Date_renouvel_contrat");
        Date echeanceDate   = result.getDate("Date_echeance_contrat");
        int idClient        = result.getInt("ID_client");
        
        contrat.setNumContrat(idContrat);
        contrat.setDateDebut(debutContrat);
        contrat.setDateEcheance(echeanceDate);
        contrat.setDateRenouvel(renouvContrat);
        
        lesContrat.addAll((Collection<ContratMaintenance>) contrat);
        
        ResultSet lectMatContrat = connexion.select("SELECT * FROM materiel WHERE ID_client = " + contrat.getIdClient() + " AND ID_contrat = " + contrat.getNumContrat());
        while(lectMatContrat.next()){
            int     idMat       = lectMatContrat.getInt("ID_mat");
            System.out.println(idMat);
            String  nomMat      = lectMatContrat.getString("nom_mat");
            Date    dateInstal  = lectMatContrat.getDate("Date_instal_mat");
            float   prixMat     = lectMatContrat.getFloat("prix_mat");
            String  emplacement = lectMatContrat.getString("emplacement_mag");
            int     idType      = lectMatContrat.getInt("ID_typemat");
            int     idContratMat= lectMatContrat.getInt("ID_contrat"); 	
            int     idClientMat = lectMatContrat.getInt("ID_client");

            materiel.setNumSerie(idMat);
            System.out.println("id mat = " + materiel.getNumSerie());
            materiel.setNom(nomMat);
            materiel.setDateInstallation(dateInstal);
            materiel.setPrixVente(prixMat);
            materiel.setEmplacement(emplacement);
            materiel.setIdTypeMateriel(idType);
            materiel.setIdContrat(idContratMat);
            materiel.setIdClient(idClientMat);

            recupMat.addAll((Collection<Materiel>) materiel);
        }
    }
    System.out.println("********************************");
    connexion.close();
}
    
    public void recupInfoCli() throws SQLException{
        connexion.ouvrirConnexion();
        ResultSet lectCli = connexion.select("SELECT * FROM client WHERE ID_client = " + idClient.getText() );
        while(lectCli.next()){
            int    idCli             = lectCli.getInt("ID_client");
            String nomCli            = lectCli.getString(2);
            int    sirenCli          = lectCli.getInt("numero_siren_cli");
            int    codeApeCli        = lectCli.getInt("code_APE_cli");
            String adressCli         = lectCli.getString("adresse_cli");
            String telCli            = lectCli.getString("telephone_cli");
            int    telCopCli         = lectCli.getInt("telecopie_cli");
            String emailCli          = lectCli.getString("email_cli");
            int    dureeCliAgence    = lectCli.getInt("Duree_cli_agence");
            int    distanceAgenceCli = lectCli.getInt("Distance_cli_agence");
            int    idAgenceCli       = lectCli.getInt("ID_agence");
            client.setNumClient(idCli);
            client.setNomClient(nomCli);
            client.setSiren(sirenCli);
            client.setCodeApe(codeApeCli);
            client.setAdresse(adressCli);
            client.setTelClient(telCli);
            client.setTelCopCli(telCopCli);
            client.setEmail(emailCli);
            client.setDureeDeplacement(dureeCliAgence);
            client.setDistanceKm(distanceAgenceCli);
            client.setNumAgence(idAgenceCli);
        }
        connexion.close();
    }
    
    public void creatPdf() throws SQLException{
        Document document = new Document();
        // Initialisation du calendrier avec la date du jour pour tout le monde
        today.setTime(new Date());
        if (!idClient.getText().equals(" ")){
            try {
                //recupMat = client.getLesMateriels(lectContPerim);
                contratPerim();
                recupInfoCli();
                //File myFile = new File("C:/Users/VincentF/Desktop/TestCashCash/TEST.pdf");
                //myFile.delete();
                PdfWriter.getInstance(document, new FileOutputStream("C:/Users/VincentF/Desktop/TestCashCash/TEST.pdf"));
                document.open();
                System.out.println("doc ouvert");
                document.add(new Paragraph(client.getNomClient()));
                document.add(new Paragraph(client.getAdresse()));
                document.add(new Paragraph(client.getTelClient()));
                document.add(new Paragraph(client.getTelCopClient()));
                document.add(new Paragraph(client.getEmail()));
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph("Monsieur/Madame "));
                String numContrat = " ";
                for (int i = 0; i < lesContrat.size(); i++) {
                    contrat.setNumContrat(lesContrat.get(i).getNumContrat());
                    numContrat = numContrat + ", " + String.valueOf(lesContrat.get(i).getNumContrat());
                }
                document.add(new Paragraph("Vous recevez cette avis de relance pour le contrat N°"+ "couvrant les materiaux décrient si-dessous."));
                System.out.println("debut recupMat");
                for (int i = 0; i < recupMat.size(); i++) {
                    materiel.setIdMateriel(recupMat.get(i).getIdMateriel());
                    System.out.print(recupMat.get(i).getIdMateriel());
                    materiel.setNumSerie(recupMat.get(i).getNumSerie());
                    materiel.setNom(recupMat.get(i).getNom());
                    materiel.setDateInstallation(recupMat.get(i).getDateInstallation());
                    
                document.add(new Paragraph(materiel.getIdMateriel() + " | " + materiel.getNumSerie() + " | " +  materiel.getNom() + " | " + materiel.getDateInstallation()));    
                }
                document.close();
            } catch (DocumentException ex) {
                Logger.getLogger(EnvoiPdf.class.getName()).log(Level.SEVERE, null, ex);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(EnvoiPdf.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
        }}
    private void validerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validerActionPerformed
        try {
            creatPdf();
        } catch (SQLException ex) {
            Logger.getLogger(EnvoiPdf.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_validerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EnvoiPdf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EnvoiPdf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EnvoiPdf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EnvoiPdf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EnvoiPdf().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField idClient;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton valider;
    // End of variables declaration//GEN-END:variables
}
