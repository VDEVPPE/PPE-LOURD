/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javafxapplication1;


import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Iterator;
/*import static javax.swing.JOptionPane.showMessageDialog;
import static com.sun.java.accessibility.util.EventID.KEY;
import java.awt.event.*;
import java.awt.Component;
import java.awt.PopupMenu;
import java.beans.XMLDecoder;
import java.io.ByteArrayInputStream;
import java.sql.Array;
import javax.swing.JLabel;
import jdk.nashorn.internal.runtime.regexp.joni.constants.Arguments;
import java.util.Calendar;
import java.text.DateFormat;*/

/**
 *
 * @author vincentf
 */
public class GestContratMat extends javax.swing.JFrame {
    
    PersistanceSQL  connexion   = new PersistanceSQL();
    Materiel        unMateriel  = new Materiel();
    int             idContrat;
    
    public GestContratMat() {
        
        initComponents();
        //Initialisation de l'affichage
        this.setTitle("Gestion des contrats matériel");
        this.setSize(500, 500);
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.setLocationRelativeTo(null);
        //Temps que le client n'est pas renseigné on empéche la saisie des info Mat
        this.jLabel4.setVisible(false);
        this.jLabel5.setVisible(false);
        this.jLabel6.setVisible(false);
        this.jLabel7.setVisible(false);
        this.jLabel8.setVisible(false);
        this.jLabel9.setVisible(false);
        this.jLabel10.setVisible(false);
        this.jLabel11.setVisible(false);
        
        this.txtId3.setVisible(false);
        this.txtId4.setVisible(false);
        this.txtId5.setVisible(false);
        this.txtId6.setVisible(false);
        this.txtId7.setVisible(false);
        this.txtId8.setVisible(false);
        this.txtId9.setVisible(false);
        this.jComboBox3.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtId3 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtId4 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtId5 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtId6 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtId7 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        txtId8 = new javax.swing.JTextField();
        txtId9 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jComboBox3 = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("N° de client :");

        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });

        jLabel2.setText("N° de contrat :");

        jLabel3.setText("Identifiant matériels :");

        jLabel4.setText("Nom matériel :");

        txtId3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtId3ActionPerformed(evt);
            }
        });

        jLabel5.setText("Date d'installation :");

        txtId4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtId4ActionPerformed(evt);
            }
        });

        jLabel6.setText("Prix matériel :");

        txtId5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtId5ActionPerformed(evt);
            }
        });

        jLabel7.setText("Emplacement :");

        txtId6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtId6ActionPerformed(evt);
            }
        });

        jLabel8.setText("Identifiant type matériel :");

        txtId7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtId7ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nouveau Contrat" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        txtId8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtId8ActionPerformed(evt);
            }
        });

        txtId9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtId9ActionPerformed(evt);
            }
        });

        jLabel9.setText("/");

        jLabel10.setText("/");

        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jButton2.setText("Valider");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Type Matériel" }));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        jLabel11.setText("Identifiant type matériel :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel11))
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtId5)
                    .addComponent(txtId6)
                    .addComponent(txtId7)
                    .addComponent(txtId3)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtId4, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtId8, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtId9, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jComboBox3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(49, 49, 49))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(77, 77, 77))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtId3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtId8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtId9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel9)
                    .addComponent(txtId4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtId5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtId6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtId7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        ArrayList lesIdContrat = new ArrayList <ContratMaintenance>();
        
        //On vide les comboBox suivant à chaque fois qu'on revalide
        if (txtId.getText().equals(0)){
            //Si pas d'info client on arrête
        }
        else{
            try {
                connexion.ouvrirConnexion();
                String numCli = txtId.getText();
                //On recherche les identifiants contrat en lien avec l'identifiant du client
                ResultSet resultat = connexion.select("SELECT ID_contrat FROM contrat WHERE ID_client = " + numCli);
                //Temps qu'il y en a on ajoute
                while(resultat.next()){
                    int id = resultat.getInt("ID_contrat");
                    lesIdContrat.add(id);
                }
                //On ferme la connexion pour éviter les problèmes (très important)
                connexion.close();
                //On ajoute la liste des identifiants contrat au combo box 
                for (int i = 0; i < lesIdContrat.size(); i++) {
                    String item = lesIdContrat.get(i).toString();
                    jComboBox1.removeAllItems();
                    jComboBox2.removeAllItems();
                    jComboBox3.removeAllItems();
                    jComboBox1.addItem(item);
                }
            } catch (SQLException ex) {
                Logger.getLogger(GestContratMat.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_txtIdActionPerformed

    private void txtId3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtId3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtId3ActionPerformed

    private void txtId5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtId5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtId5ActionPerformed

    private void txtId6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtId6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtId6ActionPerformed

    private void txtId7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtId7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtId7ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        ArrayList lesIdMateriel = new ArrayList <Materiel>();
        //On vérifie que le client est bien saisie
        if (txtId.getText().equals(0)){
            //Si pas d'info client on arrête
        }
        else{            
            try {
                connexion.ouvrirConnexion();
                String numCli = txtId.getText();
                //On lit tous les matériels en rapport avec le client
                ResultSet resultat = connexion.select("SELECT ID_Mat FROM materiel WHERE ID_client = " + numCli);
                //Temps qu'il y en a on ajoute
                while(resultat.next()){
                    int id = resultat.getInt("ID_mat");
                    lesIdMateriel.add(id);
                }
                //On ajoute la liste des identifiants contrat au combo box
                for (int i = 0; i < lesIdMateriel.size(); i++) {
                    String item = lesIdMateriel.get(i).toString();
                    jComboBox2.removeAllItems();
                    jComboBox3.removeAllItems();
                    jComboBox2.addItem(item);
                }
                //On ferme la connexion pour éviter les problèmes (très important)
                connexion.close();
            } catch (SQLException ex) {
                Logger.getLogger(GestContratMat.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        Client lesMateriels = new Client();
        List <Materiel> resultatMat = null;
        
        if (txtId.getText().equals(0)){
            //Si pas d'info client on fait pas
        }
        else{
            try {
                //On récupére les infos client et l'identifiant matériel
                String numCli = txtId.getText();
                String idMateriel = jComboBox2.getSelectedItem().toString();
                connexion.ouvrirConnexion();
                //On fait la requête pour trouver le matériel qui correspond;
                ResultSet resultat = connexion.select("SELECT * FROM materiel WHERE ID_client = " + numCli + " AND ID_mat = " + idMateriel);
                //On récupére les valeurs dans une liste
                resultatMat = lesMateriels.getLesMateriels(resultat);
                // On insert les valeur souhaité dans les text Box
                for(Materiel materiel : resultatMat){
                    this.txtId3.setText(materiel.nom);
                    if (String.valueOf(materiel.dateInstallation) == "null"){
                        this.txtId4.setText("1900");
                        this.txtId8.setText("01");
                        this.txtId9.setText("01");
                    }
                    else {
                        this.txtId4.setText(String.valueOf(materiel.dateInstallation).substring(0, 4));
                        this.txtId8.setText(String.valueOf(materiel.dateInstallation).substring(5, 7));
                        this.txtId9.setText(String.valueOf(materiel.dateInstallation).substring(8, 10));
                    }
                    this.txtId5.setText(String.valueOf(materiel.prixVente));
                    this.txtId6.setText(materiel.emplacement);
                    this.txtId7.setText(String.valueOf(materiel.idTypeMateriel));
                }
                //On rend le tout visible, si besoin de modification
                this.txtId3.setVisible(true);
                this.txtId4.setVisible(true);
                this.txtId5.setVisible(true);
                this.txtId6.setVisible(true);
                this.txtId8.setVisible(true);
                this.txtId9.setVisible(true);
                System.out.println(txtId7.getText());
                if (txtId7.getText().equals("0")){
                    //Si le type est n'est pas renseigné on affiche la liste
                    this.txtId7.setVisible(false);
                    this.jLabel8.setVisible(false);
                    
                    this.jComboBox3.setVisible(true);
                    this.jLabel11.setVisible(true);
                }
                
                else{
                    //Sinon on laisse le renseignement apparaitre
                    this.txtId7.setVisible(true);
                    this.jLabel8.setVisible(true);
                    
                    this.jComboBox3.setVisible(false);
                    this.jLabel11.setVisible(false);
                }
                
                this.jLabel4.setVisible(true);
                this.jLabel5.setVisible(true);
                this.jLabel6.setVisible(true);
                this.jLabel7.setVisible(true);
                this.jLabel9.setVisible(true);
                this.jLabel10.setVisible(true);
                //On ferme la connexion afin d'éviter d'avoir des erreurs(très important)
                connexion.close();
                
                connexion.ouvrirConnexion();
                //On lit tous les types de matériels 
                ResultSet lectTypeMat = connexion.select("SELECT ID_typemat, libelle_type FROM type_materiel");
                //Temps qu'il y en a on ajoute
                while(lectTypeMat.next()){
                    //On ajoute dans la liste que l'on a affiché 
                    int id = lectTypeMat.getInt("ID_typemat");
                    String libelle = lectTypeMat.getString("libelle_type");
                    jComboBox3.removeAllItems();
                    jComboBox3.addItem(id + " | " + libelle);
                }
                //On ferme la connexion pour éviter les problèmes (très important)
                connexion.close();
            }    
             
            catch (SQLException ex) {
                Logger.getLogger(GestContratMat.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void txtId4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtId4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtId4ActionPerformed

    private void txtId9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtId9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtId9ActionPerformed

    private void txtId8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtId8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtId8ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String idTypeMateriel;
        
        GregorianCalendar dateDebut = new GregorianCalendar(); // Création de nouveau calendrier
        GregorianCalendar dateEcheance = new GregorianCalendar();
        GregorianCalendar dateRenouvel = new GregorianCalendar();
        
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");  //On met le format qui va bien ;)
        
        // Initialisation du calendrier avec la date du jour pour tout le monde
        dateDebut.setTime(new Date()); 
        dateEcheance.setTime(new Date());
        dateRenouvel.setTime(new Date());
        
        // On fait le calcule qui va bien
        dateEcheance.add(GregorianCalendar.YEAR, +1); 
        dateRenouvel.add(GregorianCalendar.YEAR, +1);
        dateRenouvel.add(GregorianCalendar.DAY_OF_MONTH, +1);
        
        idTypeMateriel = txtId7.getText();
            if(jComboBox3.getSelectedItem() == "Type Matériel"){

            }
            else{
                String[] part = jComboBox3.getSelectedItem().toString().split("|");
                idTypeMateriel = part[0];
            }
        //On vérifie si on crée ou si on modifie le contrat
        if (jComboBox1.getSelectedIndex() == 0){
            try {
                System.out.println("UPDATE materiel SET ID_mat = " + jComboBox2.getSelectedItem().toString() + ", nom_mat = " + String.valueOf(txtId3.getText()) + ", Date_instal_mat = '" + String.valueOf(txtId4.getText()) + "-" + String.valueOf(txtId8.getText()) + "-" + String.valueOf(txtId9.getText()) + "', prix_mat = " + String.valueOf(txtId5.getText()) + ", emplacement_mag = " + String.valueOf(txtId6.getText()) + ", ID_typemat = " + idTypeMateriel + ", ID_contrat = " + idContrat + ", ID_client = " + String.valueOf(txtId.getText()) + " WHERE ID_client = " + String.valueOf(txtId.getText())+ " AND ID_mat = " + jComboBox2.getSelectedItem().toString());
                //On initialise la connexion sinon "ERREUR"
                connexion.ouvrirConnexion();
                //On recherche l'identifiant MAX des identifiant de contrat
                ResultSet lectIdMax = connexion.select("SELECT MAX(ID_contrat) FROM contrat");
                //Petit WARNING toujours mettre la boucle while pour éviter les erreurs
                //Java se dit que s'il y a une requête il y a FORCEMENT plusieurs résultat (même MAX(colonne))
                while(lectIdMax.next()){
                    //On ajoute +1 afin de créer l'identifiant suivant
                    idContrat = lectIdMax.getInt(1) + 1;
                }
                //Si on crée le contrat alors on INSERT le contrat
                connexion.updateInsert("INSERT INTO contrat (ID_contrat, Date_debut_contrat, Date_renouvel_contrat, Date_echeance_contrat, ID_client) VALUES (" + String.valueOf(idContrat) + ", '" + dateFormat.format(dateDebut.getTime()) + "', '" + dateFormat.format(dateRenouvel.getTime()) + "', '" + dateFormat.format(dateEcheance.getTime()) + "', " + String.valueOf(txtId.getText()) + ")");
                //Puis on met à jour le matériel en lui transmettant l'identifiant du contrat
                connexion.updateInsert("UPDATE materiel SET ID_mat = " + jComboBox2.getSelectedItem().toString() + ", nom_mat = '" + String.valueOf(txtId3.getText()) + "', Date_instal_mat = '" + String.valueOf(txtId4.getText()) + "-" + String.valueOf(txtId8.getText()) + "-" + String.valueOf(txtId9.getText()) + "', prix_mat = " + String.valueOf(txtId5.getText()) + ", emplacement_mag = '" + String.valueOf(txtId6.getText()) + "', ID_typemat = " + idTypeMateriel + ", ID_contrat = " + String.valueOf(idContrat) + ", ID_client = " + String.valueOf(txtId.getText()) + " WHERE ID_client = " + String.valueOf(txtId.getText()) + " AND ID_mat = " + jComboBox2.getSelectedItem().toString());
                //On ferme la connexion pour éviter les problèmes (très important)
                connexion.close();

            } catch (SQLException ex) {
                Logger.getLogger(GestContratMat.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else{
            //Si le contrat existe alors on touche pas à la table contrat
            try {
                connexion.ouvrirConnexion();
                //On ajoute juste le numéro de contrat au matériel
                connexion.updateInsert("UPDATE materiel SET ID_mat = " + jComboBox2.getSelectedItem().toString() + ", nom_mat = '" + String.valueOf(txtId3.getText()) + "', Date_instal_mat = '" + String.valueOf(txtId4.getText()) + "-" + String.valueOf(txtId8.getText()) + "-" + String.valueOf(txtId9.getText()) + "', prix_mat = " + String.valueOf(txtId5.getText()) + ", emplacement_mag = '" + String.valueOf(txtId6.getText()) + "', ID_typemat = " + String.valueOf(txtId7.getText()) + ", ID_contrat = " + jComboBox1.getSelectedItem().toString() + ", ID_client = " + String.valueOf(txtId.getText()) + " WHERE ID_client = " + String.valueOf(txtId.getText()) + " AND ID_mat = " + jComboBox2.getSelectedItem().toString());
                //On ferme toujours la connexion à la base (toujours très important)
                connexion.close();
            } catch (SQLException ex) {
                Logger.getLogger(GestContratMat.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed

    }//GEN-LAST:event_jComboBox3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestContratMat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestContratMat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestContratMat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestContratMat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestContratMat().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtId3;
    private javax.swing.JTextField txtId4;
    private javax.swing.JTextField txtId5;
    private javax.swing.JTextField txtId6;
    private javax.swing.JTextField txtId7;
    private javax.swing.JTextField txtId8;
    private javax.swing.JTextField txtId9;
    // End of variables declaration//GEN-END:variables
}
